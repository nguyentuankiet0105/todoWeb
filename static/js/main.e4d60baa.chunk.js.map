{"version":3,"sources":["logo.svg","layout/Header.js","layout/Footer.js","components/TodoItem.js","layout/Body.js","screen/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","BellOutlined","id","Footer","defaultCurrent","total","TodoItem","props","index","content","onClick","handleEdit","isDone","handleIsDone","window","confirm","handleDelete","LIST_TASK","Body","React","valueInput","setValueInput","listTask","setListTask","setIsDone","indexEditing","setIndexEditing","console","log","list","localStorage","getItem","JSON","parse","setItem","stringify","newlist","splice","placeholder","onChange","e","target","value","type","trim","disabled","icon","DownloadOutlined","length","map","item","Home","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4d60baa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as React from 'react'\r\nimport { BellOutlined } from '@ant-design/icons';\r\nimport '../Style/Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <BellOutlined />\r\n            <h1 id='title'>TODO APPLICATION</h1>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Header","import * as React from 'react';\r\nimport { Pagination } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport '../Style/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id='footer'>\r\n            <Pagination defaultCurrent={1} total={50} />\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Footer","import * as React from 'react'\r\nimport '../Style/TodoItem.css'\r\n\r\nconst TodoItem = (props, { index }) => {\r\n\r\n    return (\r\n        <div id='task'>\r\n            <p id='content'>{props.content}</p>\r\n\r\n            <span id='status'>\r\n                <button id='edit' onClick={props.handleEdit}>Edit</button> \r\n                {props.isDone ? <button id='isDone' onClick={props.handleIsDone} >isDone</button> : null}\r\n                <button id='delete' onClick={() => {\r\n                    const isDelete = window.confirm('Bạn có muốn xóa task này không ???');\r\n                    if (isDelete) {\r\n                        // alert('Bạn đã xóa task thành công.');\r\n                        return (props.handleDelete(index));\r\n                    }\r\n                }}> Delete</button>\r\n\r\n\r\n            </span>\r\n        </div >\r\n    );\r\n}\r\nexport default TodoItem","import * as React from 'react'\r\nimport { Radio, Button, Input } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n\r\nimport TodoItem from '../components/TodoItem'\r\nimport '../Style/Body.css'\r\n\r\nconst LIST_TASK = 'listTask';\r\nconst Body = () => {\r\n    const [valueInput, setValueInput] = React.useState('');\r\n    const [listTask, setListTask] = React.useState([]);\r\n    const [isDone, setIsDone] = React.useState(true);\r\n    const [indexEditing, setIndexEditing] = React.useState(null);\r\n\r\n\r\n    React.useEffect(() => {\r\n        console.log(LIST_TASK)\r\n        const list = localStorage.getItem(LIST_TASK);\r\n        if (list) {\r\n            setListTask(JSON.parse(list));\r\n        }\r\n    }, []);\r\n    React.useEffect(() => {\r\n        localStorage.setItem(LIST_TASK, JSON.stringify(listTask));\r\n    }, [listTask]);\r\n\r\n\r\n    const addTask = () => {\r\n        return setListTask([\r\n            {\r\n                content: valueInput,\r\n                isDone: true,\r\n            },\r\n            ...listTask\r\n        ],\r\n            setValueInput('')\r\n        );\r\n    }\r\n    const handleIsDone = () => {\r\n        return setIsDone(false);\r\n    }\r\n\r\n    const handleDelete = (index) => {\r\n        const newlist = [...listTask];\r\n        newlist.splice(index, 1);\r\n        setListTask(newlist);\r\n    }\r\n    const handleSaveTask = () => {\r\n        if (valueInput.trim()) {\r\n            const list = listTask;\r\n            list.splice(indexEditing, 1,\r\n                {\r\n                    content: valueInput,\r\n                    isDone: listTask[indexEditing].isDone,\r\n                });\r\n            localStorage.setItem(LIST_TASK, JSON.stringify(list));\r\n            setListTask(list, setValueInput(''))\r\n        } else {\r\n            setIndexEditing(null)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Input\r\n                    id='input'\r\n                    placeholder={indexEditing ? listTask[indexEditing].content : 'Add new tasks in here'}\r\n                    onChange={(e) => { setValueInput(e.target.value) }}\r\n                    value={valueInput} />\r\n\r\n                {indexEditing ? (\r\n                    <>\r\n                        <Button type=\"ghost\" onClick={handleSaveTask}>Save</Button>\r\n                        <Button type=\"dashed\" onClick={() => setIndexEditing(null)}>Cancel</Button>\r\n                    </>\r\n                ) : <Button\r\n                    type=\"primary\"\r\n                    disabled={!valueInput}\r\n                    icon={<DownloadOutlined />}\r\n                    onClick={addTask}\r\n                    id='add'\r\n                />\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n            {listTask.length ?\r\n                listTask.map((item, index) => {\r\n                    if (indexEditing === index) return null\r\n                        return <TodoItem\r\n                            id={index}\r\n                            key={index}\r\n                            content={item.content}\r\n                            isDone={isDone}\r\n                            handleIsDone={handleIsDone}\r\n                            handleDelete={handleDelete}\r\n                            handleEdit={() => setIndexEditing(index)}\r\n                        />\r\n                }) : (<p id='notask'>No Task</p>)\r\n            }\r\n            <div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Body","import * as React from 'react'\r\nimport Header from \"../layout/Header\"\r\nimport Footer from \"../layout/Footer\"\r\nimport Body from \"../layout/Body\"\r\n\r\nimport '../Style/Home.css'\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className='container' >\r\n            <Header />\r\n            <Body />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\nexport default Home","import logo from './logo.svg';\nimport './App.css';\nimport * as React from 'react'\nimport Home from './screen/Home'\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}