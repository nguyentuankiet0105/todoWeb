{"version":3,"sources":["logo.svg","layout/Header.js","layout/Footer.js","components/TodoItem.js","layout/Body.js","screen/Home.js","Store/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","BellOutlined","id","Footer","defaultCurrent","total","TodoItem","props","index","title","description","className","moment","deadline","format","status","onClick","handleEditStatus","handleDelete","LIST_TASK","ROUTES","path","breadcrumbName","Body","Form","useForm","form","React","titleInput","setTitleInput","descriptionInput","setDescriptionInput","Date","setDeadline","listTask","setListTask","indexEditing","setIndexEditing","console","log","list","localStorage","getItem","JSON","parse","setItem","stringify","renderByStatus","map","item","splice","window","confirm","itemRender","route","to","routes","layout","onValuesChange","e","Item","label","name","placeholder","onChange","target","value","date","disabledDate","current","endOf","type","trim","disabled","icon","DownloadOutlined","observer","secondsPassed","makeAutoObservable","this","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAAe,I,+BCaAA,EATA,WACb,OACE,qCACE,cAACC,EAAA,EAAD,IACA,oBAAIC,GAAG,QAAP,mC,SCKSC,G,cARA,WACX,OACI,qBAAKD,GAAG,SAAR,SACI,cAAC,IAAD,CAAYE,eAAgB,EAAGC,MAAO,S,8GCcnCC,G,OAjBE,SAACC,EAAD,GAAsB,EAAZC,MAEvB,OACI,sBAAKN,GAAG,OAAR,UACI,uBAAMA,GAAG,UAAT,UACI,6BAAMK,EAAME,QACZ,6BAAKF,EAAMG,cACX,sBAAKC,UAAU,QAAf,uBAAkCC,IAAOL,EAAMM,UAAUC,OAAO,iBAChE,sBAAKH,UAAU,QAAf,qBAAgCJ,EAAMQ,aAE1C,sBAAKb,GAAG,SAAR,UACI,wBAAQA,GAAG,OAAOc,QAAST,EAAMU,iBAAjC,kBACA,wBAAQf,GAAG,SAASc,QAAST,EAAMW,aAAnC,6BCRVC,G,OAAY,YAEZC,EAAS,CACb,CACEC,KAAM,OACNC,eAAgB,OAElB,CACED,KAAM,cACNC,eAAgB,cAElB,CACED,KAAM,QACNC,eAAgB,SAyKLC,EArKF,WACX,MAAeC,IAAKC,UAAbC,EAAP,oBACA,EAAoCC,WAAe,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgDF,WAAe,IAA/D,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAgCJ,WAAe,IAAIK,MAAnD,mBAAOnB,EAAP,KAAiBoB,EAAjB,KAMA,EAAgCN,WAAe,IAA/C,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,WAAe,MAAvD,mBAAOS,EAAP,KAAqBC,EAArB,KAEAV,aAAgB,WACdW,QAAQC,IAAIpB,GACZ,IAAMqB,EAAOC,aAAaC,QAAQvB,GAC9BqB,GACFL,EAAYQ,KAAKC,MAAMJ,MAExB,IACHb,aAAgB,WACdc,aAAaI,QAAQ1B,EAAWwB,KAAKG,UAAUZ,MAC9C,CAACA,IAEJ,IAiDMa,EAAiB,SAAChC,GACtB,OAAOmB,EAASc,KAAI,SAACC,EAAMzC,GACzB,OAAIyC,EAAKlC,SAAWA,EAAe,KAEjC,cAAC,EAAD,2BAEMkC,GAFN,IAGEhC,iBAAkB,kBArBD,SAACT,GACxB,IAAMgC,EAAON,EACbM,EAAKU,OAAO1C,EAAO,EAAnB,2BACKgC,EAAKhC,IADV,IAEEO,OAA+B,QAAvByB,EAAKhC,GAAOO,OAAmB,aAAe,UAExD0B,aAAaI,QAAQ1B,EAAWwB,KAAKG,UAAUN,IAC/CL,EAAY,YAAIK,IAccvB,CAAiBT,IACzCU,aAAc,WAEZ,GADiBiC,OAAOC,QAAQ,0DAClB,CACZ,IAAMZ,EAAON,EACbM,EAAKU,OAAO1C,EAAO,GACnBiC,aAAaI,QAAQ1B,EAAWwB,KAAKG,UAAUN,IAC/CL,EAAY,YAAIK,QATfhC,OAgBb,OACE,gCACE,cAAC,IAAD,CAAY6C,WA3BG,SAACC,GAClB,OAAO,cAAC,IAAD,CAAMC,GAAID,EAAMjC,KAAhB,SAAuBiC,EAAMhC,kBA0BEkC,OAAQpC,IAE5C,eAAC,IAAD,CAAMqC,OAAQ,WAAY/B,KAAMA,EAAMgC,eAAgB,SAACC,GAAD,OAAOrB,QAAQC,IAAIoB,IAAzE,UACE,cAAC,IAAKC,KAAN,CAAWC,MAAM,QAAjB,SACE,cAAC,IAAD,CACEC,KAAK,QACL5D,GAAG,QACH6D,YACE3B,EAAeF,EAASE,GAAc3B,MAAQ,8BAEhDuD,SAAU,SAACL,GACT9B,EAAc8B,EAAEM,OAAOC,QAEzBA,MAAOtC,MAGX,cAAC,IAAKgC,KAAN,CAAWC,MAAM,cAAjB,SACE,cAAC,IAAD,CACEC,KAAK,cACL5D,GAAG,QACH6D,YACE3B,EAAeF,EAASE,GAAc3B,MAAQ,yCAEhDuD,SAAU,SAACL,GACT5B,EAAoB4B,EAAEM,OAAOC,QAE/BA,MAAOpC,MAGX,cAAC,IAAK8B,KAAN,CAAWC,MAAM,WAAjB,SACE,cAAC,IAAD,CACEK,MAAOtD,IAAOC,EAAU,cACxBC,OAAQ,aACRkD,SAAU,SAACG,GACTlC,EAAYkC,GACZ7B,QAAQC,IAAI,OAAQ4B,IAEtBC,aAAc,SAACC,GAAD,OAAaA,GAAWA,EAAUzD,MAAS0D,MAAM,YAGnE,cAAC,IAAKV,KAAN,UACGxB,EACC,qCACE,cAAC,IAAD,CAAQmC,KAAK,QAAQvD,QAlGV,WACrB,GAAIkB,EAASsC,OAAQ,CACnB,IAAMhC,EAAI,sBACLN,GADK,CAER,CACEzB,MAAOmB,EACPlB,YAAaoB,EACbjB,SAAUA,EACVE,OAAQ,SAGZ0B,aAAaI,QAAQ1B,EAAWwB,KAAKG,UAAUN,IAC/CL,EAAYK,QAEZH,EAAgB,OAoFR,kBAGA,cAAC,IAAD,CAAQkC,KAAK,SAASvD,QAAS,kBAAMqB,EAAgB,OAArD,uBAKF,cAAC,IAAD,CACEkC,KAAK,UACLE,UAAW7C,EACX8C,KAAM,cAACC,EAAA,EAAD,IACN3D,QA/HI,WACd,OAAOmB,EAAY,CAEf,CACE1B,MAAOmB,EACPlB,YAAaoB,EACbjB,SAAUA,EACVE,OAAQ,QANI,mBAQXmB,IAELL,EAAc,IACdE,EAAoB,MAoHZ7B,GAAG,aAKX,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,OAAZ,SAAoB0B,EAAe,SACnC,cAAC,IAAD,CAAO1B,KAAK,cAAZ,SAA2B0B,EAAe,gBAC1C,cAAC,IAAD,CAAO1B,KAAK,QAAZ,SAAqB0B,EAAe,iB,mCClK7B6B,GCJC,I,WAbZ,aAAe,yBADfC,cAAgB,EAEZC,YAAmBC,M,4CAEvB,WACIA,KAAKF,eAAiB,I,sBAE1B,WACIE,KAAKF,eAAiB,I,mBAE1B,WACIE,KAAKF,cAAgB,M,aDOdD,aAdF,WACX,OACE,sBAAKjE,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WEDSqE,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.22e8830d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as React from 'react'\r\nimport { BellOutlined } from '@ant-design/icons'\r\nimport '../Style/Header.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <BellOutlined />\r\n      <h1 id='title'>TODO APPLICATION </h1>\r\n    </>\r\n\r\n  )\r\n}\r\nexport default Header\r\n","import * as React from 'react';\r\nimport { Pagination } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport '../Style/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id='footer'>\r\n            <Pagination defaultCurrent={1} total={50} />\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Footer","import * as React from 'react'\r\nimport moment from 'moment';\r\n\r\nimport '../Style/TodoItem.css'\r\n\r\nconst TodoItem = (props, { index }) => {\r\n\r\n    return (\r\n        <div id='task'>\r\n            <span id='content'>\r\n                <h3 >{props.title}</h3>\r\n                <h4>{props.description}</h4>\r\n                <div className='infor'>Deadline: {moment(props.deadline).format('DD/MM/YYYY')}</div>\r\n                <div className='infor'>Status: {props.status}</div>\r\n            </span>\r\n            <div id='status'>\r\n                <button id='edit' onClick={props.handleEditStatus}>Edit</button> \r\n                <button id='delete' onClick={props.handleDelete}> Delete</button>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\nexport default TodoItem","import * as React from 'react';\r\nimport { Radio, Button, Input, Form, DatePicker, PageHeader, Breadcrumb } from 'antd';\r\nimport { Route, Switch, Link, NavLink } from 'react-router-dom';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nimport TodoItem from '../components/TodoItem';\r\nimport '../Style/Body.css';\r\n\r\nconst LIST_TASK = 'listTask';\r\n\r\nconst ROUTES = [\r\n  {\r\n    path: '/new',\r\n    breadcrumbName: 'NEW',\r\n  },\r\n  {\r\n    path: '/inprogress',\r\n    breadcrumbName: 'INPROGRESS',\r\n  },\r\n  {\r\n    path: '/done',\r\n    breadcrumbName: 'DONE',\r\n  },\r\n];\r\n\r\nconst Body = () => {\r\n  const [form] = Form.useForm();\r\n  const [titleInput, setTitleInput] = React.useState('');\r\n  const [descriptionInput, setDescriptionInput] = React.useState('');\r\n  const [deadline, setDeadline] = React.useState(new Date());\r\n  // const [formValue, setFormValue] = React.useState({\r\n  //   title: ' ',\r\n  //   description: ' ',\r\n  //   deadline: new Date(),\r\n  // });\r\n  const [listTask, setListTask] = React.useState([]);\r\n  const [indexEditing, setIndexEditing] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    console.log(LIST_TASK);\r\n    const list = localStorage.getItem(LIST_TASK);\r\n    if (list) {\r\n      setListTask(JSON.parse(list));\r\n    }\r\n  }, []);\r\n  React.useEffect(() => {\r\n    localStorage.setItem(LIST_TASK, JSON.stringify(listTask));\r\n  }, [listTask]);\r\n\r\n  const addTask = () => {\r\n    return setListTask(\r\n      [\r\n        {\r\n          title: titleInput,\r\n          description: descriptionInput,\r\n          deadline: deadline,\r\n          status: 'new',\r\n        },\r\n        ...listTask,\r\n      ],\r\n      setTitleInput(''),\r\n      setDescriptionInput(''),\r\n\r\n    );\r\n  };\r\n\r\n  const handleSaveTask = () => {\r\n    if (listTask.trim()) {\r\n      const list = [\r\n        ...listTask,\r\n        {\r\n          title: titleInput,\r\n          description: descriptionInput,\r\n          deadline: deadline,\r\n          status: 'new',\r\n        },\r\n      ];\r\n      localStorage.setItem(LIST_TASK, JSON.stringify(list));\r\n      setListTask(list);\r\n    } else {\r\n      setIndexEditing(null);\r\n    }\r\n  };\r\n\r\n  const handleEditStatus = (index) => {\r\n    const list = listTask;\r\n    list.splice(index, 1, {\r\n      ...list[index],\r\n      status: list[index].status === 'new' ? 'inprogress' : 'done',\r\n    });\r\n    localStorage.setItem(LIST_TASK, JSON.stringify(list));\r\n    setListTask([...list]);\r\n  };\r\n\r\n  const itemRender = (route) => {\r\n    return <Link to={route.path}>{route.breadcrumbName}</Link>;\r\n  };\r\n\r\n  const renderByStatus = (status) => {\r\n    return listTask.map((item, index) => {\r\n      if (item.status !== status) return null;\r\n      return (\r\n        <TodoItem\r\n          key={index}\r\n          {...item}\r\n          handleEditStatus={() => handleEditStatus(index)}\r\n          handleDelete={() => {\r\n            const isDelete = window.confirm('Bạn có muốn xóa task này không ?');\r\n            if (isDelete) {\r\n              const list = listTask;\r\n              list.splice(index, 1);\r\n              localStorage.setItem(LIST_TASK, JSON.stringify(list));\r\n              setListTask([...list]);\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Breadcrumb itemRender={itemRender} routes={ROUTES} />\r\n\r\n      <Form layout={'vertical'} form={form} onValuesChange={(e) => console.log(e)}>\r\n        <Form.Item label=\"Title\">\r\n          <Input\r\n            name=\"title\"\r\n            id=\"input\"\r\n            placeholder={\r\n              indexEditing ? listTask[indexEditing].title : 'Add title new tasks in here'\r\n            }\r\n            onChange={(e) => {\r\n              setTitleInput(e.target.value);\r\n            }}\r\n            value={titleInput}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Description\">\r\n          <Input\r\n            name=\"description\"\r\n            id=\"input\"\r\n            placeholder={\r\n              indexEditing ? listTask[indexEditing].title : '(Option) Add description tasks in here'\r\n            }\r\n            onChange={(e) => {\r\n              setDescriptionInput(e.target.value);\r\n            }}\r\n            value={descriptionInput}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Deadline\">\r\n          <DatePicker\r\n            value={moment(deadline, 'DD/MM/YYYY')}\r\n            format={'DD/MM/YYYY'}\r\n            onChange={(date) => {\r\n              setDeadline(date);\r\n              console.log('date', date);\r\n            }}\r\n            disabledDate={(current) => current && current < moment().endOf('day')}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {indexEditing ? (\r\n            <>\r\n              <Button type=\"ghost\" onClick={handleSaveTask}>\r\n                Save\r\n              </Button>\r\n              <Button type=\"dashed\" onClick={() => setIndexEditing(null)}>\r\n                Cancel\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <Button\r\n              type=\"primary\"\r\n              disabled={!titleInput}\r\n              icon={<DownloadOutlined />}\r\n              onClick={addTask}\r\n              id=\"add\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n      <Switch>\r\n        <Route path=\"/new\">{renderByStatus('new')}</Route>\r\n        <Route path=\"/inprogress\">{renderByStatus('inprogress')}</Route>\r\n        <Route path=\"/done\">{renderByStatus('done')}</Route>\r\n      </Switch>\r\n    </div> \r\n  );\r\n};\r\nexport default Body;\r\n","import * as React from 'react';\r\nimport Header from '../layout/Header';\r\nimport Footer from '../layout/Footer';\r\nimport Body from '../layout/Body';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport TimerStore from '../Store/index';\r\n\r\nimport '../Style/Home.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <Body />\r\n      <Footer />\r\n      {/* <button onClick={() => TimerStore.reset()}>\r\n        Seconds passed: {TimerStore.secondsPassed}\r\n      </button>\r\n      <button onClick={() => TimerStore.increase()}>Tang</button>\r\n      <button onClick={() => TimerStore.decrease()}>Giam</button> */}\r\n    </div>\r\n  );\r\n};\r\nexport default observer(Home);\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { makeAutoObservable } from \"mobx\"\r\nimport { observer } from \"mobx-react\"\r\n\r\nclass Timer {\r\n    secondsPassed = 0\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n    increase() {\r\n        this.secondsPassed += 1\r\n    }\r\n    decrease() {\r\n        this.secondsPassed -= 1\r\n    }\r\n    reset() {\r\n        this.secondsPassed = 0\r\n    }\r\n}\r\nconst myTimer = new Timer()\r\nexport default myTimer\r\n","import logo from './logo.svg';\nimport './App.css';\nimport * as React from 'react';\nimport Home from './screen/Home';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Home />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}